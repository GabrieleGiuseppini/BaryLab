= Verify elasticity & friction
	- TODO: at impact (during ray tracing), if we are on edge we do not update pos
	- Try fix 1:
		- At impact:
			- Set velocity to classic response (N+T)
			- If bounce is more than threshold:
				- Detach from edge by fixed epsilon
			- Else (bounce < threshold)				
				- Stay on edge
			- Return true
		- Then, at step beginning:
			- If on edge (implies we're constrained):
				- Total forces += (apparent forces)
				- When we'll integrate, we'll zero out gravity and apparent force (depending on normal), and also take eventual bounce velocity
			- Integrate
				- If on edge, we zero out gravity and apparent force (depending on normal) because of counter apparent forces
				- We also take the eventual bounce velocity acquired during impact
		- No more no-do on-edge case at RT
	- Try fix 2:
		- Move impact response to intersection finding, when that edge is floor and we go through it
		- At inital on edge, if we go through it: flatten trajectory
			- Replacing targets (so it's also rendered)
			- Replacing velocity
				

- Consider alternative implementation:
	- Elasticity (impact) done like now at edge
	- Apparent forces & friction done @ physics steps iff on edge
		- How to avoid doing impact again at RT edge however?

- Allow for moving mesh
	- Particles::State: TargetPos becomes non-opt member of opt RayTracingState
		- Presence of RayTracingState tells we're doing ray tracing instead of physics, in place of old TargetPos
	- Everything "Trajectory" becomes "RayTracingTrajectory"
	- RayTracingState contains CurrentPosition - not absolute but in mesh coords
		- Initialized - in constrained state - as current pos in triangle (we should be doing that already), and target as absolute target pos (should be doing that already)
			- See code TODO's - do it also at manually-set case
		- Particle's physical position is only set at end of particle update
			- Set to RayTracingState::CurrentPosition
				- Rationale: when we hit end of particle update, RayTracingState::CurrentPosition is either target position (and thus absolute),
				  or - when hitting edge - at new mesh's edge position - THIS IS THE CRITICAL TEST: should match expected target absolute position
		- Render:
			- At each Render call, if we are doing RayTracing, render an additional ("shadow") particle at RayTracingState::CurrentPosition, almost transparent
				- Real particle will move at end, and ghost disappears because of losing RayTracing state
	- Speed UI: TODO
	- Rendering of mesh wrt speed: TODO
